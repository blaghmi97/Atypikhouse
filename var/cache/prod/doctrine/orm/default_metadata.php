<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Habitat__CLASSMETADATA__' => 0,
'App__Entity__Reservation__CLASSMETADATA__' => 1,
'App__Entity__Atypikhouse__CLASSMETADATA__' => 2,
'App__Entity__Commentaire__CLASSMETADATA__' => 3,
'App__Entity__Demande__CLASSMETADATA__' => 4,
'App__Entity__Message__CLASSMETADATA__' => 5,
'App__Entity__Photo__CLASSMETADATA__' => 6,
'App__Entity__Photo2__CLASSMETADATA__' => 7,
'App__Entity__Prisedevue__CLASSMETADATA__' => 8,
'App__Entity__Propriete__CLASSMETADATA__' => 9,
'App__Entity__User__CLASSMETADATA__' => 10,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Habitat',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Habitat',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\HabitatRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'type' => [
                            'fieldName' => 'type',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'type',
                        ],
                        'titre' => [
                            'fieldName' => 'titre',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 100,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'titre',
                        ],
                        'nombreCouchage' => [
                            'fieldName' => 'nombreCouchage',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nombre_couchage',
                        ],
                        'surface' => [
                            'fieldName' => 'surface',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'Surface',
                        ],
                        'prix' => [
                            'fieldName' => 'prix',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'prix',
                        ],
                        'adresse' => [
                            'fieldName' => 'adresse',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'adresse',
                        ],
                        'codepostale' => [
                            'fieldName' => 'codepostale',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 10,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'codepostale',
                        ],
                        'ville' => [
                            'fieldName' => 'ville',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'ville',
                        ],
                        'pays' => [
                            'fieldName' => 'pays',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 30,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'pays',
                        ],
                        'datePub' => [
                            'fieldName' => 'datePub',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'date_pub',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 600,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'titre' => 'titre',
                        'nombre_couchage' => 'nombreCouchage',
                        'Surface' => 'surface',
                        'prix' => 'prix',
                        'adresse' => 'adresse',
                        'codepostale' => 'codepostale',
                        'ville' => 'ville',
                        'pays' => 'pays',
                        'date_pub' => 'datePub',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'titre' => 'titre',
                        'nombreCouchage' => 'nombre_couchage',
                        'surface' => 'Surface',
                        'prix' => 'prix',
                        'adresse' => 'adresse',
                        'codepostale' => 'codepostale',
                        'ville' => 'ville',
                        'pays' => 'pays',
                        'datePub' => 'date_pub',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'habitat',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Habitat',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'photos' => [
                            'fieldName' => 'photos',
                            'mappedBy' => 'habitat',
                            'targetEntity' => 'App\\Entity\\Photo',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Habitat',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'messages' => [
                            'fieldName' => 'messages',
                            'mappedBy' => 'habitat',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Habitat',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'reservations' => [
                            'fieldName' => 'reservations',
                            'mappedBy' => 'habitat',
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Habitat',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Reservation',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Reservation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ReservationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nombreNuit' => [
                            'fieldName' => 'nombreNuit',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'NombreNuit',
                        ],
                        'prixTotal' => [
                            'fieldName' => 'prixTotal',
                            'type' => 'float',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'PrixTotal',
                        ],
                        'dateReservation' => [
                            'fieldName' => 'dateReservation',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'DateReservation',
                        ],
                        'dateDebut' => [
                            'fieldName' => 'dateDebut',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'DateDebut',
                        ],
                        'dateFin' => [
                            'fieldName' => 'dateFin',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'DateFin',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'NombreNuit' => 'nombreNuit',
                        'PrixTotal' => 'prixTotal',
                        'DateReservation' => 'dateReservation',
                        'DateDebut' => 'dateDebut',
                        'DateFin' => 'dateFin',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nombreNuit' => 'NombreNuit',
                        'prixTotal' => 'PrixTotal',
                        'dateReservation' => 'DateReservation',
                        'dateDebut' => 'DateDebut',
                        'dateFin' => 'DateFin',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'reservation',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Reservation',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'habitat' => [
                            'fieldName' => 'habitat',
                            'joinColumns' => [
                                [
                                    'name' => 'habitat_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'inversedBy' => 'reservations',
                            'targetEntity' => 'App\\Entity\\Habitat',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Reservation',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'habitat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'habitat_id' => 'habitat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'habitat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Atypikhouse',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Atypikhouse',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AtypikhouseRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'description' => [
                            'fieldName' => 'description',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'description',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'atypikhouse',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Commentaire',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Commentaire',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CommentaireRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'texte' => [
                            'fieldName' => 'texte',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'texte',
                        ],
                        'dateCommentaire' => [
                            'fieldName' => 'dateCommentaire',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'DateCommentaire',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'texte' => 'texte',
                        'DateCommentaire' => 'dateCommentaire',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'texte' => 'texte',
                        'dateCommentaire' => 'DateCommentaire',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'commentaire',
                    ],
                ],
                'associationMappings' => [
                    [
                        'reservation' => [
                            'fieldName' => 'reservation',
                            'joinColumns' => [
                                [
                                    'name' => 'reservation_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'reservation_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'reservation_id' => 'reservation_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'reservation_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Commentaire',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Demande',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Demande',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DemandeRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'statut' => [
                            'fieldName' => 'statut',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'statut',
                        ],
                        'activite' => [
                            'fieldName' => 'activite',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'activite',
                        ],
                        'secteur' => [
                            'fieldName' => 'secteur',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'secteur',
                        ],
                        'connu' => [
                            'fieldName' => 'connu',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'connu',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'statut' => 'statut',
                        'activite' => 'activite',
                        'secteur' => 'secteur',
                        'connu' => 'connu',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'statut' => 'statut',
                        'activite' => 'activite',
                        'secteur' => 'secteur',
                        'connu' => 'connu',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'demande',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'targetEntity' => 'App\\Entity\\User',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                    'unique' => true,
                                ],
                            ],
                            'mappedBy' => null,
                            'inversedBy' => null,
                            'cascade' => [
                                'persist',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 1,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Demande',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Message',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Message',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MessageRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'dateMessage' => [
                            'fieldName' => 'dateMessage',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => true,
                            'precision' => null,
                            'columnName' => 'DateMessage',
                        ],
                        'contexte' => [
                            'fieldName' => 'contexte',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 300,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'texte',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'DateMessage' => 'dateMessage',
                        'texte' => 'contexte',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'dateMessage' => 'DateMessage',
                        'contexte' => 'texte',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'message',
                    ],
                ],
                'associationMappings' => [
                    [
                        'touser' => [
                            'fieldName' => 'touser',
                            'joinColumns' => [
                                [
                                    'name' => 'touser_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'message1',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'touser_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'touser_id' => 'touser_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'touser_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'habitat' => [
                            'fieldName' => 'habitat',
                            'joinColumns' => [
                                [
                                    'name' => 'habitat_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'messages',
                            'targetEntity' => 'App\\Entity\\Habitat',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'habitat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'habitat_id' => 'habitat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'habitat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'fromuser' => [
                            'fieldName' => 'fromuser',
                            'joinColumns' => [
                                [
                                    'name' => 'fromuser_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => 'message2',
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Message',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'fromuser_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'fromuser_id' => 'fromuser_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'fromuser_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Photo',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Photo',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PhotoRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'Src' => [
                            'fieldName' => 'Src',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 200,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'Source',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'Source' => 'Src',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Src' => 'Source',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'photo',
                    ],
                ],
                'associationMappings' => [
                    [
                        'habitat' => [
                            'fieldName' => 'habitat',
                            'joinColumns' => [
                                [
                                    'name' => 'habitat_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'photos',
                            'targetEntity' => 'App\\Entity\\Habitat',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Photo',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'habitat_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'habitat_id' => 'habitat_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'habitat_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Photo2',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Photo2',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\Photo2Repository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'source' => [
                            'fieldName' => 'source',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 150,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'source',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'source' => 'source',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'source' => 'source',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'photo2',
                    ],
                ],
                'associationMappings' => [
                    [
                        'prise' => [
                            'fieldName' => 'prise',
                            'joinColumns' => [
                                [
                                    'name' => 'prise_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [],
                            'inversedBy' => 'photos2',
                            'targetEntity' => 'App\\Entity\\Prisedevue',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Photo2',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => false,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'prise_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'prise_id' => 'prise_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'prise_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Prisedevue',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Prisedevue',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PrisedevueRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'commentaire' => [
                            'fieldName' => 'commentaire',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 350,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'Commentaire',
                        ],
                        'dateprise' => [
                            'fieldName' => 'dateprise',
                            'type' => 'datetime',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'Dateprise',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'Commentaire' => 'commentaire',
                        'Dateprise' => 'dateprise',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'commentaire' => 'Commentaire',
                        'dateprise' => 'Dateprise',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'prisedevue',
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => [
                            'fieldName' => 'user',
                            'joinColumns' => [
                                [
                                    'name' => 'user_id',
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\User',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Prisedevue',
                            'isCascadeRemove' => false,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'user_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'user_id' => 'user_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'user_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                        'photos2' => [
                            'fieldName' => 'photos2',
                            'mappedBy' => 'prise',
                            'targetEntity' => 'App\\Entity\\Photo2',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => true,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\Prisedevue',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'reservation' => [
                            'fieldName' => 'reservation',
                            'joinColumns' => [
                                [
                                    'name' => 'reservation_id',
                                    'unique' => false,
                                    'nullable' => false,
                                    'onDelete' => 'CASCADE',
                                    'columnDefinition' => null,
                                    'referencedColumnName' => 'id',
                                ],
                            ],
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'inversedBy' => null,
                            'targetEntity' => 'App\\Entity\\Reservation',
                            'fetch' => 2,
                            'type' => 2,
                            'mappedBy' => null,
                            'isOwningSide' => true,
                            'sourceEntity' => 'App\\Entity\\Prisedevue',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                            'sourceToTargetKeyColumns' => [
                                'reservation_id' => 'id',
                            ],
                            'joinColumnFieldNames' => [
                                'reservation_id' => 'reservation_id',
                            ],
                            'targetToSourceKeyColumns' => [
                                'id' => 'reservation_id',
                            ],
                            'orphanRemoval' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Propriete',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Propriete',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ProprieteRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'nom' => [
                            'fieldName' => 'nom',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'nom',
                        ],
                        'input' => [
                            'fieldName' => 'input',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'input',
                        ],
                        'habitat' => [
                            'fieldName' => 'habitat',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 255,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'habitat',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'input' => 'input',
                        'habitat' => 'habitat',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'input' => 'input',
                        'habitat' => 'habitat',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'propriete',
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\User',
                ],
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => [
                            'fieldName' => 'id',
                            'type' => 'integer',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'id' => true,
                            'columnName' => 'id',
                        ],
                        'email' => [
                            'fieldName' => 'email',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'email',
                        ],
                        'roles' => [
                            'fieldName' => 'roles',
                            'type' => 'array',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'roles',
                        ],
                        'password' => [
                            'fieldName' => 'password',
                            'type' => 'string',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'password',
                        ],
                        'username' => [
                            'fieldName' => 'username',
                            'type' => 'string',
                            'scale' => null,
                            'length' => 180,
                            'unique' => true,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'username',
                        ],
                        'enabled' => [
                            'fieldName' => 'enabled',
                            'type' => 'boolean',
                            'scale' => null,
                            'length' => null,
                            'unique' => false,
                            'nullable' => false,
                            'precision' => null,
                            'columnName' => 'enabled',
                        ],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'username' => 'username',
                        'enabled' => 'enabled',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'username' => 'username',
                        'enabled' => 'enabled',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'quoted' => true,
                    ],
                ],
                'associationMappings' => [
                    [
                        'message1' => [
                            'fieldName' => 'message1',
                            'mappedBy' => 'touser',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                        'message2' => [
                            'fieldName' => 'message2',
                            'mappedBy' => 'fromuser',
                            'targetEntity' => 'App\\Entity\\Message',
                            'cascade' => [
                                'persist',
                                'remove',
                            ],
                            'orphanRemoval' => false,
                            'fetch' => 2,
                            'type' => 4,
                            'inversedBy' => null,
                            'isOwningSide' => false,
                            'sourceEntity' => 'App\\Entity\\User',
                            'isCascadeRemove' => true,
                            'isCascadePersist' => true,
                            'isCascadeRefresh' => false,
                            'isCascadeMerge' => false,
                            'isCascadeDetach' => false,
                        ],
                    ],
                ],
                'idGenerator' => [
                    $o[1],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
